name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: '要發布的版本號 (例如 v1.0.1)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.12]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build on Windows
        if: runner.os == 'Windows'
        run: |
          pyinstaller --onefile --icon=sk.ico --add-data "CHT;CHT" --collect-all UnityPy --collect-all TypeTreeGeneratorAPI --collect-all archspec --name="SilkSong_CHT_win" sk_cht.py
      
      - name: Build on macOS
        if: runner.os == 'macOS'
        run: |
          pyinstaller --onefile --icon=sk.icns --add-data "CHT:CHT" --collect-all UnityPy --collect-all TypeTreeGeneratorAPI --collect-all archspec --name="SilkSong_CHT_mac" sk_cht.py

      - name: Build on Linux
        if: runner.os == 'Linux'
        run: |
          pyinstaller --onefile --icon=sk.png --add-data "CHT:CHT" --collect-all UnityPy --collect-all TypeTreeGeneratorAPI --collect-all archspec --name="SilkSong_CHT_linux" sk_cht.py

      - name: Archive and Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ runner.os }}
          path: |
            dist/SilkSong_CHT_win.exe
            dist/SilkSong_CHT_mac
            dist/SilkSong_CHT_linux
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare Release Files
        run: |
          cd dist
          find . -type f -name 'SilkSong_CHT_win.exe' -exec zip -j SilkSong_CHT-Windows.zip {} +
          find . -type f -name 'SilkSong_CHT_mac' -exec zip -j SilkSong_CHT-macOS.zip {} +
          find . -type f -name 'SilkSong_CHT_linux' -exec zip -j SilkSong_CHT-Linux.zip {} +

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: 更新補丁邏輯 使用前請使用舊版還原備份 以確保沒有問題。
          files: |
            dist/SilkSong_CHT-Windows.zip
            dist/SilkSong_CHT-macOS.zip
            dist/SilkSong_CHT-Linux.zip


